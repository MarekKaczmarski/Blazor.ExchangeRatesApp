@page "/currency-detail/{code}"

@using Serilog
@using CurrencyApplication.Client.Services;
@using CurrencyApplication.Client.Helpers;
@using CurrencyApplication.Models;
@using Color = MudBlazor.Color

@inject ICurrencyService CurrencyService

@if (Rate != null && Rate.Rates != null && Rate.Rates.Any())
{
    <h3 class="d-flex align-items-center">
        <img src="/images/flags/@CurrencyHelper.GetFlagImageName(Rate.Code)" alt="@Rate.Code" width="48" height="48" class="mr-1" />
        @FirstLetterToUpper(Rate.Currency) (@Rate.Code)
    </h3>
    <h2>@currentMid</h2>
    <h4>@currentDate.ToShortDateString()</h4>
    <h6>
        <span>YTD (Year To Date): </span>
        <span style='color: @(YTDPercentage < 0 ? "red" : "green")'>
            @YTDPercentage.ToString("0.00")%
        </span>
    </h6>
    <h6>
        <span>Zmiana: </span>
        <span style='color: @(Change < 0 ? "red" : "green")'>
            @Change.ToString("0.00")%
        </span>
    </h6>

    <ApexChart TItem="Rate"
               Title="Historia Kursu"
               Options="@options"
               @ref="chart">

        <ApexPointSeries TItem="Rate"
                         Items="Rate.Rates"
                         Name="Kurs średni"
                         SeriesType="SeriesType.Line"
                         XValue="rate => rate.EffectiveDate.Date.ToShortDateString()"
                         YValue="rate => rate.Mid" />
    </ApexChart>

    <MudPaper Class="d-flex align-start flex-grow-1 gap-2" Elevation="0">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="()=>HandleButtonClick(1)">1M</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="()=>HandleButtonClick(3)">3M</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="()=>HandleButtonClick(6)">6M</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="()=>HandleButtonClick(12)">1Y</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="()=>HandleCustomButtonClick()">WŁASNE</MudButton>
        <MudDateRangePicker 
            @ref="_picker"
            @bind-DateRange="_dateRange"
            Style="width: 300px"
            Label="Wybierz przedział czasowy" 
            AutoClose="@_autoClose" 
            Clearable="true" 
            DateFormat="yyyy-MM-dd"
            IsDateDisabledFunc="@FutureDate">
                <PickerActions>
                    <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.Clear())">Wyczyść</MudButton>
                    <MudButton OnClick="@(() => _picker.Close(false))">Anuluj</MudButton>
                    <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
                </PickerActions>
        </MudDateRangePicker>
    </MudPaper>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <MudPaper Class="d-flex align-start flex-grow-1 gap-4">
            <MudAlert Severity="Severity.Error" ShowCloseIcon="true" CloseIconClicked="(() => CloseErrorNotification())">@errorMessage</MudAlert>
        </MudPaper>
    }
    <MudTable Items="@Rate.Rates" Class="mt-4">
        <HeaderContent>
            <MudTh>Tabela</MudTh>
            <MudTh>Data</MudTh>
            <MudTh>Średni kurs</MudTh>
        </HeaderContent>
        <RowTemplate Context="rate">
            <MudTd>@rate.No</MudTd>
            <MudTd>@rate.EffectiveDate</MudTd>
            <MudTd>@rate.Mid</MudTd>
        </RowTemplate>
    </MudTable>
}
else
{
    <MudText>Ładowanie...</MudText>
}

